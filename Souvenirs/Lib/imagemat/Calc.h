//#include "Engine.h"

#include "MainProc.h"
void  svdcmp(double **a, int m, int n, double w[], double **v);
void  ludcmp(double **a, int n, int *indx, double *d);
void  lubksb(double **a, int n, int *indx, double b[]);
void  InvMatrix(double **a, int n, double **y);
void  InvMatrix(double **a, int n);
void  LinearSolve(double **a, int n, double b[]);
double Determination(double **a, int n);
void  jacobi(double **a, int n, double d[], double **v, int *nrot);
void  eigsrt(double d[], double **v, int n);
void  Eig_Tridiagonal(double **a, int n, double d[]);

double **Mat_Tranpose(double **a, int n, int m);
void Mat_Tranpose(double **a, int n);
void Mat_Tranpose(double **a, int n, int m, double **mat);
void  SelfMat_SclarMul(double **a, double b, int m, int n);
double **Mat_Mul(double **a, double **b, int n, int m, int l);
void  Mat_Mul(double **a, double *b, int n, int m, double *c) ;
double *Mat_Mul(double **a, double *b, int n, int m);
void  Mat_Mul(double *a, double **b, int n, int m, double *c);
double *Mat_Mul(double *a, double **b, int n, int m);
void  Mat_Mul(double **a, double **b, int n, int m, int l, double **mat);
void  Mat_Mul_diag(double **a, double *b, int n, int m); 
BOOL  Mat_sqrt(double **mat, int n, double **sqrtmat);
BOOL  Mat_sqrt(double **mat, int n);
void  Ortho(double **A, int m, int n, double **Q);
double ran1(long *idum);
double gasdev(long *idum);
double **Randn(int m, int n);
void  Randn(int m, int n, double **mat);
double **Rand(int m, int n);
void  MatInitial(double **mat, int m, int n, double val);
void  MatCopy(double **mat, double **temp, int m, int n);
void  SymmOrtho(double **mat, int m, int n);
void  TranseMatMul(double **a, double **b, int n, int m, int l, double **c);
void  MatMulTranse(double **a, double **b, int n, int m, int l, double **c);
double FindMinAbsOfDiagMat(double **mat, int n);
void  Mat_Minus(double **a, double **b, int m, int n, double **c);
void  SelfMat_Minus(double **a, double **b, int m, int n);
double Mat_Norm(double **A, int m, int n);
void  Mat_Plus(double **a, double **b, int m, int n, double **c);
void  SelfMat_Plus(double **a, double **b, int m, int n);
double **Mat_Pow(double **mat, int m, int n, double alpha);
void  SelfMat_Pow(double **mat, int m, int n, double alpha);
double *MatSum(double **mat, int m, int n);
void  SelfPointDivide(double **mat1, double **mat2, int m, int n);
void  mat_Tanh(double **mat, int m, int n);
double **PointMul(double **mat1, double **mat2, int m, int n);
void  SelfPointMul(double **mat1, double **mat2, int m, int n);
void  Selfmat_Gauss(double **mat, int m, int n, double a2);
double  **mat_Gauss(double **mat, int m, int n, double a2);
double  **cov(double **X, int m, int n, int flag);
void  LinearSolve_SVD(double **a, int m, int n, double b[], double x[]);
void  Mat_Tranpose(double **a, int n, int m, double **mat) ;
BOOL gaussj(double **a, int n, double **b, int m);
void   Mat_Mul(double **a, double **b, int n, int m, int l, double **mat) ;
void svdcmp(float **a, int m, int n, double w[], double **v);
void MatCopy(double **mat, float **temp, int m, int n);
void svdcmp(float **a, int m, int n, double w[], float **v);
void svdcmp(double **a, int m, int n, double w[], double **v);
void Mat_Tranpose(float **a, int n) ;
void Mat_Mul(double **a, float **b, int n, int m, int l, double **mat) ;
void sprsin(double **a, int n, double thresh, unsigned long nmax, double sa[], unsigned long ija[]);
void sprsin_FromCordiToRow(double *sa0, int row_inds[], int col_inds[], int nonzero_num, int n, double sa[], unsigned long ija[]);
void sprsin_FromCordiToRow(double** dataPerRow, ItemSort **colsPerRow, int* numPerRow, int n, double sa[], unsigned long ija[]);
void linbcg(unsigned long n, double b[], double x[], int itol, double tol, int itmax, int *iter, double *err);
void sprsum_col(double sa[], unsigned long ija[], double x[], unsigned long n);
void ConjugateGradient_DiagPreco(unsigned long n, double b[], double x[], double tol, int itmax, int *iter, double *err);
void ConjugateGradient_DiagPreco(unsigned long n, float b[], float x[], float tol, int itmax, int *iter, float *err);
void ConjugateGradient_DiagPreco_speed(unsigned long n, float b[], float x[], float tol, int itmax, int *iter, float *err);
void ConjugateGradient(unsigned long n, float b[], float x[], float tol, int itmax, int *iter, float *err);
void SteepestGradient(unsigned long n, double b[], double x[], double tol, int itmax, int *iter, double *err);
void ICPreconditioner(double *sa, unsigned long *ija, int n, long *pntr, long *indx, double *val, int &nz);
void ICPreconditioner(double **mat, int n, double **Colesky);
void solve_cholsl(double **a, int n, double b[], double x[]);
void linbcg(unsigned long n, float b[], float x[], int itol, float tol, int itmax, int *iter, float *err);
